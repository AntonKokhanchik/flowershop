buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.4.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


sourceCompatibility = 12
targetCompatibility = 12

repositories {
    mavenCentral()
}


dependencies {
//  Spring
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-jersey'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-jooq'

//  Tomcat
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-jasper', version: '9.0.19'
    compile group: 'org.apache.tomcat', name: 'tomcat-annotations-api', version: '9.0.19'

//    For views
    compile group: 'javax.servlet', name: 'jstl', version: '1.2'

//    Database
    compile group: 'com.h2database', name: 'h2', version: '1.4.199'
    compile group: 'com.mysema.querydsl', name: 'querydsl-apt', version: '3.7.4', classifier: 'jpa'
    compile group: 'com.querydsl', name: 'querydsl-jpa', version: '4.2.1'

//      dto <-> entity mapping
    compile group: 'net.sf.dozer', name: 'dozer', version: '5.5.1'

//   for java.time.LocalDateTime mapping
    compile group: 'io.craftsman', name: 'dozer-jdk8-support', version: '1.0.2'

//    Marshalling
    compile group: 'org.codehaus.castor', name: 'castor-xml', version: '1.4.1'
    compile group: 'xerces', name: 'xercesImpl', version: '2.12.0'
    compile group: 'org.springframework', name: 'spring-oxm', version: '5.1.7.RELEASE'
}

// QueryDsl and it's code generation
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath('net.ltgt.gradle:gradle-apt-plugin:0.18')
    }
}

apply plugin: 'net.ltgt.apt'
apply plugin: 'net.ltgt.apt-idea'

def queryDslVersion = '4.1.3'

dependencies {
    compile("com.querydsl:querydsl-core:${queryDslVersion}")
    compile("com.querydsl:querydsl-jpa:${queryDslVersion}")
}

dependencies {
    compile "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor (
            "com.querydsl:querydsl-apt:${queryDslVersion}:jpa",
            "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final",
            "javax.annotation:javax.annotation-api:1.3.2",
    )
}

def props = new Properties()
file("src/main/resources/database.properties").withInputStream { props.load(it) }

// liquibase
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.liquibase:liquibase-gradle-plugin:2.0.1"
    }
}
apply plugin: 'org.liquibase.gradle'

dependencies {
    liquibaseRuntime 'org.liquibase:liquibase-core:3.6.3'
    liquibaseRuntime 'com.h2database:h2:1.4.199'
    liquibaseRuntime 'ch.qos.logback:logback-classic'
    liquibaseRuntime 'ch.qos.logback:logback-core'
}


liquibase {
    activities {
        main {
            changeLogFile 'src/main/resources/changelog.xml'
            url props.getProperty('spring.datasource.url')
            username props.getProperty('spring.datasource.username')
            password props.getProperty('spring.datasource.password')
            defaultSchemaName 'PUBLIC'
        }
    }
    runList = 'main'
}

// jooq
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "nu.studer:gradle-jooq-plugin:3.0.3"
    }
}

apply plugin: "nu.studer.jooq"

dependencies {
    jooqRuntime "com.h2database:h2:1.4.199"
}

jooq {
    version = '3.11.11'
    edition = 'OSS'
    sample(sourceSets.main) {
        jdbc {
            driver = props.getProperty('spring.datasource.driverClassName')
            url =  props.getProperty('spring.datasource.url')
            user = props.getProperty('spring.datasource.username')
            password = props.getProperty('spring.datasource.password')
        }
        generator {
            database {
                name = 'org.jooq.meta.h2.H2Database'
                inputSchema = 'PUBLIC'
            }
            generate {
                deprecated = false
                instanceFields = true
                pojos = true
//                daos = true
            }
        }
    }
}

generateSampleJooqSchemaSource.dependsOn update
